---
- name: Users creation
  hosts: all
  become: yes

  tasks:
    #creating user
    - name: Creating user named simone
      user:
        name: simone
        groups: "{{ 'sudo' if ansible_os_family == 'Debian' else 'wheel' }}"
      tags: always
    #adding a ssh key to the user simone
    - name: Adding ssh key for simone
      authorized_key:
        user: simone
        key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIC1uT/PIyHLzipmmnvU5jA2Ky4cVt1DnA4YO7fA6zwcl simone authorized key"
      tags: always
    #allow user simone to get access with sudo prividge without providing sudo password
    - name: Sudoers drop-in for simone (NOPASSWD)
      ansible.builtin.copy:
        dest: /etc/sudoers.d/simone
        content: "simone ALL=(ALL) NOPASSWD: ALL\n"
        owner: root
        group: root
        mode: '0440'
        validate: '/usr/sbin/visudo -cf %s'

- name: Working on workstation(ubuntu-c)
  hosts: workstation
  become: yes
  tasks:
    - name: Installing unzip
      package:
        name: unzip
    - name: Installing terraform
      unarchive:
        src: https://releases.hashicorp.com/terraform/1.12.2/terraform_1.12.2_linux_amd64.zip
        dest: /usr/local/bin
        remote_src: yes
        mode: 0755
        owner: root
        group: root
    - name: Start apache(web serveur) into ubuntu workstation
      service:
        name: apache2
        state: started
        enabled: yes 

- name: Updating all servers before any installation
  hosts: all
  become: yes
  tasks:
    - name: Updating ubuntu servers
      ansible.builtin.apt:
        update_cache: yes
        only_upgrade: yes
      tags: always
      when: ansible_distribution == "Ubuntu"

    - name: Updating centos servers
      package:
        update_only: yes
        update_cache: yes
      tags: always
      when: ansible_distribution == "Centos"

- name: Ubuntu servers installation
  hosts: ubuntu_servers
  become: yes
  tasks:
    - name: Installing tools into ubuntu servers
      apt:
        name:
          - apache2
          - nginx
        state: present
      when: ansible_distribution == "Ubuntu"
      tags: [ubuntu,apache,apache,nginx]
    - name: Copying file to the servers(Ubuntu)
      copy:
        src: /root/my_ansible_world/assets/default_site.html
        dest: /var/www/html/index.html
        owner: root
        group: root
        mode: 0644
      tags: [ubuntu,apache,apache,nginx]
- name: Centos servers installation
  hosts: centos_servers
  become: yes
  tasks:
    - name: Installing tools into centos servers
      dnf:
        name:
          - httpd
          - samba
          - mysql
        state: present
      when: ansible_distribution == "Centos"
      tags: [centos,httpd,samba,mysql]
    - name: Starting httpd(apache) service in CentOS
      service:
        name: httpd
        state: started
      when: ansible_distribution == "CentOS"
    
    - name: Changing a line in the service(httpd) configuration file
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        regexp: '^ServerAdmin'
        line: ServerAdmin bijkashama2@gmail.com
      when: ansible_distribution == "CentOS"
      register: httpd #il enregistre le changement
    - name: Restarting httpd(apache) service in CentOS
      service:
        name: httpd
        state: restarted
      when: httpd.changed #il utilise le changement enregistr√©
